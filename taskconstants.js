"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefininitionIsInCurrentTeamProjectInput = "definitionIsInCurrentTeamProject";
exports.ServerUrlInput = "tfsServer";
exports.BuildDefinitionsToTriggerInput = "buildDefinition";
exports.QueueBuildForUserInput = "queueBuildForUserThatTriggeredBuild";
exports.UseSameSourceVersionInput = "useSameSourceVersion";
exports.UseSameBranchInput = "useSameBranch";
exports.BranchToUseInput = "branchToUse";
exports.WaitForBuildsToFinishInput = "waitForQueuedBuildsToFinish";
exports.WaitForBuildsToFinishRefreshTimeInput = "waitForQueuedBuildsToFinishRefreshTime";
exports.FailTaskIfBuildNotSuccessfulInput = "failTaskIfBuildsNotSuccessful";
exports.DownloadBuildArtifacts = "downloadBuildArtifacts";
exports.DropDirectory = "dropDirectory";
exports.StoreInEnvironmentVariableInput = "storeInEnvironmentVariable";
exports.DemandsVariableInput = "demands";
exports.QueueID = "queueid";
exports.BuildParametersInput = "buildParameters";
exports.IgnoreSslCertificateErrorsInput = "ignoreSslCertificateErrors";
exports.AuthenticationMethodInput = "authenticationMethod";
exports.UsernameInput = "username";
exports.PasswordInput = "password";
exports.EnableBuildInQueueConditionInput = "enableBuildInQueueCondition";
exports.IncludeCurrentBuildDefinitionInput = "includeCurrentBuildDefinition";
exports.BlockingBuildsInput = "blockingBuildsList";
exports.DependentOnSuccessfulBuildConditionInput = "dependentOnSuccessfulBuildCondition";
exports.DependentOnSuccessfulBuildsInput = "dependentBuildsList";
exports.DependentOnFailedBuildConditionInput = "dependentOnFailedBuildCondition";
exports.DependentOnFailedBuildsInput = "dependentFailingBuildsList";
exports.TriggeredBuildIdsEnvironmentVariableName = "TriggeredBuildIds";
exports.BuildStateNotStarted = "notStarted";
exports.BuildStateInProgress = "inProgress";
exports.BuildStateCompleted = "completed";
exports.TestRunStateCompleted = "Completed";
exports.TestRunOutcomePassed = "Passed";
exports.BuildResultSucceeded = "succeeded";
exports.ApiUrl = "_apis";
exports.AuthenticationMethodDefaultCredentials = "Default Credentials";
exports.AuthenticationMethodOAuthToken = "OAuth Token";
exports.AuthenticationMethodBasicAuthentication = "Basic Authentication";
exports.AuthenticationMethodPersonalAccessToken = "Personal Access Token";
